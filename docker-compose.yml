version: '3.8'

services:
  db:
    image: postgres:13
    container_name: sbp_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: samlink
      POSTGRES_DB: sbpreport
    command: ["postgres", "-c", "listen_addresses=0.0.0.0"] # ограничиваем для безопасности только локальные вызовы вместо дефолтного 127.0.0.1
#    command: ["postgres", "-c", "listen_addresses=*"] # любые могут обратиться, оставим на всякий, но менее безопасно
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sbpreport"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - sbp_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: sbp_pgadmin
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@sbpreport.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    networks:
      - sbp_network

  backend:
    build: ./backend
    container_name: sbp_backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:samlink@db:5432/sbpreport
      SQLALCHEMY_POOL_RECYCLE: 3600
      SQLALCHEMY_POOL_TIMEOUT: 30
    volumes:
      - ./backend/app:/app/app
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - sbp_network

  nginx:
    build: ./nginx
    container_name: sbp_nginx
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ./backend/static:/static
    restart: unless-stopped
    networks:
      - sbp_network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  sbp_network:
    driver: bridge